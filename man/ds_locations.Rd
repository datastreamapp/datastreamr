% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/datastreamr.R
\name{ds_locations}
\alias{ds_locations}
\title{Pulls information from the Locations endpoint}
\usage{
ds_locations(
  api_token,
  select = NULL,
  filter = NULL,
  orderby = NULL,
  top = NULL,
  count = FALSE
)
}
\arguments{
\item{api_token}{A character string containing your unique API token}

\item{select}{A list of allowable columns to return}

\item{filter}{A list of conditions to filter by. Allowable conditions are =}

\item{orderby}{List of columns to orderby}

\item{top}{Number string to determine number of rows to return. If NULL, returns all rows}

\item{FALSE}{Boolean. When TRUE, returns count of data instead of data}
}
\value{
If count = FALSE, then returns a dataframe with requested columns.
If count = TRUE, returns a numeric string.

For information on allowable columns for each parameter please review the README at
\url{https://github.com/gordonfn/datastreamr}
}
\description{
\code{ds_observations} Takes in different API request criteria such as row selections and filters
and returns the desired data. Allows for an easy interface for calling the data
from the observation end point. Also allows to return the count of this request.
}
\examples{
ds_locations("HJ6GY8H",select=c("Id","Name"), filter=c("CharacteristicName = pH",
"GeometryId=ds.hub.atlantic"),orderby = "Name",top=1000)

ds_locations("HJ6GY8H",select=c("Id","Name"), filter=c("CharacteristicName = pH",
"GeometryId=ds.hub.atlantic"),orderby = "Name", count = TRUE)
}
